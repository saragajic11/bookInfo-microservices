api:
  common:
    version: 1.0.0
    title: Sample API
    description: Description of the API...
    termsOfServiceUrl: MINE TERMS OF SERVICE URL
    license: License
    licenseUrl: MY LICENSE URL

    contact:
      name: Contact
      url: My
      email: me@mail.com

  book-composite:
    get-composite-book:
      description: Returns a composite view of the specified book id
      notes: |
        # Normal response
        If the requested book id is found the method will return information regarding:
        1. Base book information
        1. Comments
        1. Ratings
        1. Book Theme Nights
        1. Service Addresses
        (technical information regarding the addresses of the microservices that created the response)
        
        # Expected partial and error responses
        In the following cases, only a partial response be created (used to simplify testing of error conditions)
        
        ## Book id 113
        200 - Ok, but no Comments will be returned
        
        ## Book id 213
        200 - Ok, but no Ratings will be returned
        
         ## Book id 313
        200 - Ok, but no Book Theme Nights will be returned
        
        ## Non numerical book id
        400 - A <b>Bad Request</b> error will be returned
        
        ## Book id 13
        404 - A <b>Not Found</b> error will be returned
        
        ## Negative book ids
        422 - An <b>Unprocessable Entity</b> error will be returned

logging:
  level:
    root: INFO
    microservices: DEBUG
    se.magnus: DEBUG

---
spring.profiles: docker

server.port: 8080

app:
  book-service:
    host: book
    port: 8080
  book-theme-night-service:
    host: book-theme-night
    port: 8080
  comment-service:
    host: comment
    port: 8080
  rating-service:
    host: rating
    port: 8080